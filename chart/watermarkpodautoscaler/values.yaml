# Default values for watermarkpodautoscaler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: hugohafner/watermarkpodautoscaler
  tag: v0.5.0
  pullPolicy: IfNotPresent
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
logLevel: "info"
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
rbac:
  # Specifies whether the RBAC resources should be created
  create: true
  useExistingExternalMetricsReader: false
# Configure the controller to watch all namespaces
watchAllNamespaces: true
# Labels to be included as metric tags
labelsAsTags: []
podSecurityContext: {}
# fsGroup: 2000

# Determines which resource lock to use for leader election
leaderElectionResourceLock: configmaps
securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

extraArgs: []
# - --metricSyncPeriodSeconds=10

metrics:
  prometheus:
    enabled: true
    ddAgentScrape: true
  statsd:
    enabled: false
    useSocket: false # If false, mounts host ip and port
    port: 8125
    socketPath: /var/run/datadog/
    socketName: dsd.socket
  namespace: ""
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}
